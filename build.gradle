plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.convert' version '2.2.0'
	id 'java-library'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'
String generatedSourcesPath = 'src/main/java'

compileJava {
    File generatedSourceDir = project.file(generatedSourcesPath)
    options.annotationProcessorGeneratedSourcesDirectory = generatedSourceDir
    outputs.dir(generatedSourceDir)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	api 'com.querydsl:querydsl-jpa:5.0.0'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation 'org.projectlombok:lombok'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	runtimeOnly 'com.h2database:h2'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
